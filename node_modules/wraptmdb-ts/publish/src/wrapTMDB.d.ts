/********************
 * Init: must call Init function first before using any other functions, or all func throw errors.
 * @param {string}token  enter your_token
 ********************/
export declare function Init(token: string): void;
/********************
 * Debug: get TOKEN
 * @returns {string} Common.TOKEN
 ********************/
export declare function GetToken(): string;
/********************
 * Header: Set HTTP header, it's optional, but should have it.
 * @param {string} header object
 * @example
 * {
      'User-Agent': 'npm package-dev',
      Referer: 'wraptmdb-ts',
  }
 ********************/
export declare function SetHeader(input: any): void;
export declare namespace Movies {
  /********************
   * 1.Get the primary information about a movie.
   * @param {number|string} movie_id  Movie_ID for TMDB
   * @param {string} language(optional)  Language to request
   * @example wraptmdb.MOVIE.GetDetails(624860);
   *          wraptmdb.MOVIE.GetDetails(624860,'en-US');
   * @doc https://developers.themoviedb.org/3/movies/get-movie-details
   ********************/
  function GetDetails(movie_id: number | string, language?: string): any;
  /********************
   * 2.Grab the following account states for a session:
   *   ‧Movie rating
   *   ‧If it belongs to your watchlist
   *   ‧If it belongs to your favourite list
   * @param {number|string} movie_id  Movie ID in TMDB
   * @param {string} session_id Authentication ID
   * @param {string} guest_session_id (optional)
   * @example wraptmdb.MOVIE.GetAccountStates(624860,"session_id");
   *          wraptmdb.MOVIE.GetAccountStates(624860,"session_id","guest_session_id");
   * @doc https://developers.themoviedb.org/3/movies/get-movie-account-states
   ********************/
  function GetAccountStates(
    movie_id: number | string,
    session_id: string,
    guest_session_id?: string
  ): any;
  /********************
   * 3.Get all of the alternative titles for a movie.
   * @param {number|string} movie_id  Movie ID in TMDB
   * @param {string} country (optional)
   * @example wraptmdb.MOVIE.GetAlternativetitles(624860);
   * @doc https://developers.themoviedb.org/3/movies/get-movie-alternative-titles
   ********************/
  function GetAlternativetitles(movie_id: string, country?: string): any;
  /********************
   * 4.Get the changes for a movie. By default only the last 24 hours are returned.
   * You can query up to 14 days in a single query by using the start_date and end_date query parameters.
   * @param {number|string} movie_id  Movie ID in TMDB
   * @param {string} start_date (optional)
   * @param {string} end_date (optional)
   * @param {number} page (optional)
   * @example wraptmdb.MOVIE.GetChanges(624860);
   * wraptmdb.MOVIE.GetChanges(624860,'2016-08-29');
   * @doc https://developers.themoviedb.org/3/movies/get-movie-changes
   ********************/
  function GetChanges(
    movie_id: string,
    start_date?: string,
    end_date?: string,
    page?: number
  ): any;
  /********************
   * 5.Get the cast and crew for a movie.
   * @param {number|string} movie_id  Movie ID in TMDB
   * @param {string} language(optional)  Language to request
   * @example wraptmdb.MOVIE.GetCredits(624860);
   *          wraptmdb.MOVIE.GetCredits(624860,'en-US');
   * @doc https://developers.themoviedb.org/3/movies/get-movie-credits
   ********************/
  function GetCredits(movie_id: string, language?: string): any;
  /********************
   * 6.GET /movie/{movie_id}/external_ids
   * @description Get the external ids for a movie. We currently support the following external sources.
   * @param {number|string} movie_id  Movie ID in TMDB
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/movies/get-movie-external-ids
   ********************/
  function GetExternalIDs(movie_id: string): any;
  /********************
   * 7.Querying images with a language parameter will filter the results.
   * If you want to include a fallback language (especially useful for backdrops)
   * you can use the include_image_language parameter.
   * This should be a comma seperated value like so: include_image_language=en,null.
   * @param {number|string} movie_id  Movie ID in TMDB
   * @param {string} language (optional)
   * @param {string} include_image_language (optional)
   * @doc https://developers.themoviedb.org/3/movies/get-movie-images
   ********************/
  function GetImage(
    movie_id: number | string,
    language?: string,
    include_image_language?: string
  ): any;
  /********************
   * 8.Get the keywords that have been added to a movie.
   * @param {number|string} movie_id  Movie ID in TMDB
   * @doc https://developers.themoviedb.org/3/movies/get-movie-keywords
   ********************/
  function GetKeywords(movie_id: number | string): any;
  /********************
   * 9.Get a list of lists that this movie belongs to.
   * @param {number|string} movie_id  Movie ID in TMDB
   * @param {string} language(optional)  Language to request
   * @param {number} page (optional)
   * @doc https://developers.themoviedb.org/3/movies/get-movie-lists
   ********************/
  function GetLists(
    movie_id: number | string,
    language?: string,
    page?: number
  ): any;
  /********************
   *10.Get a list of recommended movies for a movie.
   * @param {number|string} movie_id  Movie ID in TMDB
   * @doc https://developers.themoviedb.org/3/movies/get-movie-recommendations
   ********************/
  function GetRecommendations(
    movie_id: number | string,
    language?: string,
    page?: number
  ): any;
  /********************
     *11.Get the release date along with the certification for a movie.
     * Release dates support different types:
         1.Premiere
         2.Theatrical (limited)
         3.Theatrical
         4.Digital
         5.Physical
         6.TV
     * @param {number|string} movie_id  Movie ID in TMDB
     * @doc https://developers.themoviedb.org/3/movies/get-movie-release-dates
     ********************/
  function GetReleaseDates(movie_id: number | string): any;
  /********************
   *12.Get the user reviews for a movie.
   * @param {number|string} movie_id  Movie ID in TMDB
   * @param {string} language(optional)  Language to request
   * @param {number} page (optional)
   * @doc https://developers.themoviedb.org/3/movies/get-movie-reviews
   ********************/
  function GetReviews(
    movie_id: number | string,
    language?: string,
    page?: number
  ): any;
  /********************
   *13.Get a list of similar movies. This is "not" the same as the "Recommendation" system you see on the website.
   * These items are assembled by looking at keywords and genres.
   * @param {number|string} movie_id  Movie ID in TMDB
   * @param {string} language(optional)  Language to request
   * @param {number} page (optional)
   * @doc https://developers.themoviedb.org/3/movies/get-similar-movies
   ********************/
  function GetSimilar(
    movie_id: number | string,
    language?: string,
    page?: number
  ): any;
  /********************
   *14.Get a list of translations that have been created for a movie.
   * @param {number|string} movie_id  Movie ID in TMDB
   * @doc https://developers.themoviedb.org/3/movies/get-movie-translations
   ********************/
  function GetTranslations(movie_id: number | string): any;
  /********************
   *15.Get the videos that have been added to a movie.
   * @param {number|string} movie_id  Movie ID in TMDB
   * @param {string} language(optional)  Language to request
   * @doc https://developers.themoviedb.org/3/movies/get-movie-videos
   ********************/
  function GetVideos(movie_id: number | string, language?: string): any;
  /********************
     *16.Powered by JustWatch, you can query this method to get a list of the availabilities per country by provider.
      This is not going to return full deep links, but rather, it's just enough information to display what's available where.
      You can link to the provided TMDB URL to help support TMDB and provide the actual deep links to the content.
     * @param {number|string} movie_id  Movie ID in TMDB
     * @doc https://developers.themoviedb.org/3/movies/get-movie-watch-providers
     ********************/
  function GetWatchProviders(movie_id: number | string): any;
  /********************
   *17.Rate a movie.
   * A valid session or guest session ID is required.
   * @param {number|string} movie_id  Movie ID in TMDB
   * @param {any} query POST query
   * @param {string} guest_session_id (optional)
   * @param {string} session_id (optional)
   * @doc https://developers.themoviedb.org/3/movies/rate-movie
   * @example query {
   *  "value":8.5
   * }
   ********************/
  function PostRateMovie(movie_id: number | string, query: any): any;
  /********************
   * 18.Remove your rating for a movie.
   * A valid session or guest session ID is required
   * @param {number|string} movie_id  Movie ID in TMDB
   * @param {string} guest_session_id
   * @param {string} session_id
   * @doc https://developers.themoviedb.org/3/movies/delete-movie-rating
   *
   ********************/
  function DeleteRating(
    movie_id: number | string,
    session_id?: string,
    guest_session_id?: string
  ): any;
  /********************
   * 19.GET /movie/latest
   * @description Get the most newly created movie. This is a live response and will continuously change.
   * @param {string} language(optional)  Language to request
   * @doc https://developers.themoviedb.org/3/movies/get-latest-movie
   ********************/
  function GetLatest(language?: string): any;
  /********************
   * 20.GET /movie/now_playing
   * @description Get a list of movies in theatres.
   * This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.
   * You can optionally specify a region prameter which will narrow the search to only look for theatrical release dates within the specified country.
   * @param {string} language(optional)  Language to request
   * @param {number} page(optional)
   * @param {string} region(optional)
   * @doc https://developers.themoviedb.org/3/movies/get-latest-movie
   ********************/
  function GetNowPlaying(
    language?: string,
    page?: number,
    region?: string
  ): any;
  /********************
   * 21.Get a list of the current popular movies on TMDB. This list updates daily.
   * @param {string} language(optional)  Language to request
   * @param {number} page(optional)
   * @param {string} region(optional)
   * @doc https://developers.themoviedb.org/3/movies/get-popular-movies
   ********************/
  function GetPopular(language?: string, page?: number, region?: string): any;
  /********************
   * 22.Get the top rated movies on TMDB.
   * @param {string} language(optional)  Language to request
   * @param {number} page(optional)
   * @param {string} region(optional)
   * @doc https://developers.themoviedb.org/3/movies/get-top-rated-movies
   ********************/
  function GetTopRated(language?: string, page?: number, region?: string): any;
  /********************
   * 23.Get a list of upcoming movies in theatres.
   * This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.
   * You can optionally specify a region prameter which will narrow the search to only look for theatrical release dates within the specified country.
   * @param {string} language(optional)  Language to request
   * @param {number} page(optional)
   * @param {string} region(optional)
   * @doc https://developers.themoviedb.org/3/movies/get-upcoming
   ********************/
  function GetUpcoming(language?: string, page?: number, region?: string): any;
}
export declare namespace TV {
  /********************
   * 1.Get the primary TV show details by id.
   * @param {number|string} tv_id  Series/TV ID in TMDB
   * @param {string} language(optional)  Language to request
   * @returns {number} JSON
   * @doc https://developers.themoviedb.org/3/tv/get-tv-details
   ********************/
  function GetDetails(tv_id: number | string, language?: string): any;
  /********************
     * 2.Grab the following account states for a session:
        ‧TV show rating
        ‧If it belongs to your watchlist
        ‧If it belongs to your favourite list
     * @param {number|string} tv_id  TV ID in TMDB
     * @param {string} session_id
     * @param {string} guest_session_id (optional)
     * @returns JSON
     * @doc https://developers.themoviedb.org/3/tv/get-tv-account-states
     ********************/
  function GetAccountStates(
    tv_id: number | string,
    session_id: string,
    guest_session_id?: string
  ): any;
  /********************
   * 3.Get the aggregate credits (cast and crew) that have been added to a TV show.
   * This call differs from the main credits call in that it does not return the newest season but rather,
   * is a view of all the entire cast & crew for all episodes belonging to a TV show.
   * @param {number|string} tv_id  TV ID in TMDB
   * @param {string} language
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv/get-tv-aggregate-credits
   ********************/
  function GetAggregateCredits(tv_id: number | string, language?: string): any;
  /********************
   * 4.Returns all of the alternative titles for a TV show.
   * @param {number|string} tv_id  TV ID in TMDB
   * @param {string} language
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv/get-tv-alternative-titles
   ********************/
  function GetAlternativetitles(tv_id: number | string, language?: string): any;
  /********************
   * 5.Get the changes for a movie. By default only the last 24 hours are returned.
   * You can query up to 14 days in a single query by using the start_date and end_date query parameters.
   * @param {number|string} tv_id  TV ID in TMDB
   * @param {number|string} start_date (optional)
   * @param {number|string} end_date (optional)
   * @param {number} page (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv/get-tv-changes
   ********************/
  function GetChanges(
    tv_id: number | string,
    start_date?: string,
    end_date?: string,
    page?: number
  ): any;
  /********************
   * 6.Get the list of content ratings (certifications) that have been added to a TV show.
   * @param {number|string} tv_id  TV ID in TMDB
   * @param {string} language(optional)  Language to request
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv/get-tv-content-ratings
   ********************/
  function GetContentRatings(tv_id: number | string, language?: string): any;
  /********************
   * 7.Get the cast and crew for a movie.
   * @param {number|string} tv_id  TV ID in TMDB
   * @param {string} language(optional)  Language to request
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/movies/get-movie-changes
   ********************/
  function GetCredits(tv_id: number | string, language?: string): any;
  /********************
   * 8.Get all of the episode groups that have been created for a TV show.
   * With a group ID you can call the GetTVEpisodeGroup method.
   * @param {number|string} tv_id  TV ID in TMDB
   * @param {string} language(optional)  Language to request
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv/get-tv-episode-groups
   ********************/
  function GetEpisodeGroup(tv_id: number | string, language?: string): any;
  /********************
   * 9.Get the external ids for a TV show. We currently support the following external sources.
   * @param {number|string} tv_id  tv ID in TMDB
   * @param {string} language(optional)  Language to request
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv/get-tv-external-ids
   ********************/
  function GetExternalIDs(tv_id: number | string, language?: string): any;
  /********************
   * 10.Get the images that belong to a TV show.
   * @param {number|string} tv_id  tv ID in TMDB
   * @param {string} language (optional)
   * @doc https://developers.themoviedb.org/3/tv/get-tv-images
   ********************/
  function GetImages(tv_id: number | string, language?: string): any;
  /********************
   * 11.Get the keywords that have been added to a TV show.
   * @param {number|string} tv_id  tv ID in TMDB
   * @doc https://developers.themoviedb.org/3/tv/get-tv-keywords
   ********************/
  function GetKeywords(tv_id: number | string): any;
  /********************
   * 12.Get the list of TV show recommendations for this item.
   * @param {number|string} tv_id  tv ID in TMDB
   * @param {string} language (optional)
   * @param {number} page (optional)
   * @doc https://developers.themoviedb.org/3/tv/get-tv-recommendations
   ********************/
  function GetRecommendations(
    tv_id: number | string,
    language?: string,
    page?: number
  ): any;
  /********************
   *13.Get the reviews for a TV show.
   * @param {number|string} tv_id  tv ID in TMDB
   * @param {string} language(optional)  Language to request
   * @param {number} page (optional)
   * @doc https://developers.themoviedb.org/3/tv/get-tv-reviews
   ********************/
  function GetReviews(
    tv_id: number | string,
    language?: string,
    page?: number
  ): any;
  /********************
   *14.Get a list of seasons or episodes that have been screened in a film festival or theatre.
   * @param {number|string} tv_id  tv ID in TMDB
   * @doc https://developers.themoviedb.org/3/tv/get-screened-theatrically
   ********************/
  function GetScreenedTheatrically(tv_id: number | string): any;
  /********************
   *15.Get a list of similar TV shows. These items are assembled by looking at keywords and genres.
   * @param {number|string} tv_id  tv ID in TMDB
   * @param {string} language(optional)  Language to request
   * @param {number} page (optional)
   * @doc https://developers.themoviedb.org/3/tv/get-similar-tv-shows
   ********************/
  function GetSimilarTVShows(tv_id: number | string): any;
  /********************
   *16.Get a list of the translations that exist for a TV show.
   * @param {number|string} tv_id  tv ID in TMDB
   * @doc https://developers.themoviedb.org/3/movies/get-movie-translations
   ********************/
  function GetTranslations(tv_id: number | string, language?: string): any;
  /********************
   *17.GET /tv/{tv_id}/videos
   * @description Get the videos that have been added to a TV show.
   * @param {number|string} tv_id  tv ID in TMDB
   * @param {string} language(optional)  Language to request
   * @doc https://developers.themoviedb.org/3/tv/get-tv-videos
   ********************/
  function GetVideos(tv_id: number | string, language?: string): any;
  /********************
      *18.Powered by JustWatch, you can query this method to get a list of the availabilities per country by provider.
       This is not going to return full deep links, but rather, it's just enough information to display what's available where.
       You can link to the provided TMDB URL to help support TMDB and provide the actual deep links to the content.
      * @param {number|string} tv_id  tv ID in TMDB
      * @doc https://developers.themoviedb.org/3/movies/get-movie-watch-providers
      ********************/
  function GetWatchProviders(tv_id: number | string): any;
  /********************
   *19.Rate a TV show.
   * A valid session or guest session ID is required.
   * @param {number|string} tv_id  tv ID in TMDB
   * @param {any} query POST query
   * @param {string} guest_session_id (optional)
   * @param {string} session_id (optional)
   * @doc https://developers.themoviedb.org/3/tv/rate-tv-show
   * @example query {
   *  "value":8.5
   * }
   ********************/
  function PostRateTVShow(
    tv_id: number | string,
    query: any,
    session_id: string,
    guest_session_id?: string
  ): any;
  /********************
   * 20.Remove your rating for a TV show.
   * A valid session or guest session ID is required
   * @param {number|string} tv_id  tv ID in TMDB
   * @param {string} session_id
   * @param {string} guest_session_id (optional)
   * @doc https://developers.themoviedb.org/3/tv/delete-tv-show-rating
   ********************/
  function DeleteRating(
    tv_id: number | string,
    session_id: string,
    guest_session_id?: string
  ): any;
  /********************
   * 21.Get the most newly created TV show. This is a live response and will continuously change.
   * @param {string} language(optional)  Language to request
   * @doc https://developers.themoviedb.org/3/tv/get-latest-tv
   ********************/
  function GetLatest(language?: string): any;
  /********************
   * 22.Get a list of TV shows that are airing today. This query is purely day based as we do not currently support airing times.
   * You can specify a timezone to offset the day calculation.
   * Without a specified timezone, this query defaults to EST (Eastern Time UTC-05:00).
   * @param {string} language(optional)  Language to request
   * @param {number} page(optional)
   * @doc https://developers.themoviedb.org/3/tv/get-tv-airing-today
   ********************/
  function GetTVAiringToday(language?: string, page?: number): any;
  /********************
   * 23.Get a list of shows that are currently on the air.
   * This query looks for any TV show that has an episode with an air date in the next 7 days.
   * @param {string} language(optional)  Language to request
   * @param {number} page(optional)
   * @doc https://developers.themoviedb.org/3/tv/get-tv-on-the-air
   ********************/
  function GetTVOnTheAir(language?: string, page?: number): any;
  /********************
   * 24.Get a list of the current popular TV shows on TMDB. This list updates daily.
   * @param {string} language(optional)  Language to request
   * @param {number} page(optional)
   * @doc https://developers.themoviedb.org/3/tv/get-popular-tv-shows
   ********************/
  function GetPopular(language?: string, page?: number): any;
  /********************
   * 25.Get a list of the top rated TV shows on TMDB.
   * @param {string} language(optional)  Language to request
   * @param {number} page(optional)
   * @doc https://developers.themoviedb.org/3/tv/get-top-rated-tv
   ********************/
  function GetTopRated(language?: string, page?: number): any;
}
export declare namespace Account {
  /********************
   * 1.Get your account details.
   * @param {string|number} session_id
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/account/get-account-details
   ********************/
  function GetDetails(session_id: string | number): any;
  /********************
   * 2.Get all of the lists created by an account. Will invlude private lists if you are the owner.
   * @param {string} account_id your account ID
   * @param {string} session_id authentication ID
   * @param {string} language(optional)  Language to request
   * @param {number} page(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/account/get-created-lists
   ********************/
  function GetCreatedLists(
    account_id: string,
    session_id: string,
    language?: string,
    page?: number
  ): any;
  /********************
   * 3.Get the list of your favorite movies.
   * @param {string} session_id
   * @param {string} account_id
   * @param {string} language(optional)  Language to request
   * @param {string} sort_by(optional) "created_at.asc" or "created_at.desc"
   * @param {number} page(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/account/get-favorite-movies
   ********************/
  function GetFavoriteMovies(
    account_id: string,
    session_id: string,
    language?: string,
    sort_by?: string,
    page?: number
  ): any;
  /********************
   * 4.Get the list of your favorite TV shows.
   * @param {string} account_id
   * @param {string} session_id
   * @param {string} language(optional)  Language to request
   * @param {string} sort_by(optional) "created_at.asc" or "created_at.desc"
   * @param {number} page(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/account/get-favorite-tv-shows
   ********************/
  function GetFavoriteTVShows(
    account_id: string,
    session_id: string,
    language?: string,
    sort_by?: string,
    page?: number
  ): any;
  /********************
   * 5.This method allows you to mark a movie or TV show as a favorite item.
   * @param {string} session_id
   * @param {string} account_id
   * @returns {any} JSON
   * @example query{
   *  "media_type": "movie",
   *  "media_id": 550,
   *  "favorite": true
   * }
   * @doc https://developers.themoviedb.org/3/account/mark-as-favorite
   ********************/
  function PostMarkAsFavorite(
    query: any,
    account_id: string,
    session_id: string
  ): any;
  /********************
   * 6.Get a list of all the movies you have rated.
   * @param {string} session_id
   * @param {string} account_id
   * @param {string} language(optional)  Language to request
   * @param {string} sort_by(optional) "created_at.asc" or "created_at.desc"
   * @param {number} page(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/account/get-rated-movies
   ********************/
  function GetRatedMovies(
    account_id: string,
    session_id: string,
    language?: string,
    sort_by?: string,
    page?: number
  ): any;
  /********************
   * 7.Get a list of all the TV shows you have rated.
   * @param {string} account_id
   * @param {string} session_id
   * @param {string} language(optional)  Language to request
   * @param {string} sort_by(optional)
   * @param {number} page(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/account/get-rated-tv-shows
   ********************/
  function GetRatedTVShows(
    account_id: string,
    session_id: string,
    language?: string,
    sort_by?: string,
    page?: number
  ): any;
  /********************
   * 8.Get a list of all the TV episodes you have rated.
   * @param {string} account_id
   * @param {string} session_id
   * @param {string} language(optional)  Language to request
   * @param {string} sort_by
   * @param {number} page(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/account/get-rated-tv-episodes
   ********************/
  function GetRatedTVEpisodes(
    account_id: string,
    session_id: string,
    language?: string,
    sort_by?: string,
    page?: number
  ): any;
  /********************
   * 9.Get a list of all the movies you have added to your watchlist.
   * @param {string} account_id
   * @param {string} session_id
   * @param {string} language(optional)  Language to request
   * @param {string} sort_by
   * @param {number} page(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/account/get-movie-watchlist
   ********************/
  function GetMovieWatchlist(
    account_id: string,
    session_id: string,
    language?: string,
    sort_by?: string,
    page?: number
  ): any;
  /********************
   * 10.Get a list of all the TV shows you have added to your watchlist.
   * @param {string} account_id
   * @param {string} session_id
   * @param {string} language(optional)  Language to request
   * @param {string} sort_by
   * @param {number} page(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/account/get-tv-show-watchlist
   ********************/
  function GetTVShowWatchlist(
    account_id: string,
    session_id: string,
    language?: string,
    sort_by?: string,
    page?: number
  ): any;
  /********************
   * 11.Add a movie or TV show to your watchlist.
   * @param {string} session_id
   * @param {any} query
   * @returns {any} JSON
   * @example query{
   *  "media_type": "movie",
   *  "media_id": 11,
   *  "watchlist": true
   * }
   * @doc https://developers.themoviedb.org/3/account/add-to-watchlist
   ********************/
  function PostAddToWatchlist(
    session_id: string,
    query: any,
    account_id?: String
  ): any;
}
export declare namespace Authentication {
  /********************
   * 1.This method will let you create a new guest session.
   * Guest sessions are a type of session that will let a user rate movies and TV shows
   * but not require them to have a TMDB user account.
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/authentication/create-guest-session
   ********************/
  function GetCreateGuestSession(): any;
  /********************
   * 2.Create a temporary request token that can be used to validate a TMDB user login.
   * @returns {number} JSON
   * @doc https://developers.themoviedb.org/3/authentication/create-request-token
   ********************/
  function GetCreateRequestToken(): any;
  /********************
   * 3.You can use this method to create a fully valid session ID once a user has validated the request token.
   * @param {any} query
   * @returns {number} JSON
   * @example query{
   *     "request_token": "6bc047b88f669d1fb86574f06381005d93d3517a"
   * }
   * @doc https://developers.themoviedb.org/3/authentication/create-session
   ********************/
  function PostCreateSession(query?: any): any;
  /********************
   * 4.This method allows an application to validate a request token by entering a username and password.
   * @param {any} query
   * @returns {number} JSON
   * @example query{
   *    "username": "johnny_appleseed",
   *    "password": "test123",
   *    "request_token": "1531f1a558c8357ce8990cf887ff196e8f5402ec"
   * }
   * @doc hhttps://developers.themoviedb.org/3/authentication/validate-request-token
   ********************/
  function PostCreateSessionWithLogin(query: any): any;
  /********************
   * 5.Use this method to create a v3 session ID if you already have a valid v4 access token.
   * The v4 token needs to be authenticated by the user.
   * Your standard "read token" will not validate to create a session ID.
   * @param {any} query
   * @returns {number} JSON
   * @doc https://developers.themoviedb.org/3/authentication/create-session-from-v4-access-token
   ********************/
  /********************
   * 6.If you would like to delete (or "logout") from a session, call this method with a valid session ID.
   * @param {any} query
   * @returns {number} JSON
   * @example query{
   *    "session_id": "2629f70fb498edc263a0adb99118ac41f0053e8c"
   * }
   * @doc https://developers.themoviedb.org/3/account/get-account-details
   ********************/
  function DeleteDeleteSession(query: any): any;
}
export declare namespace Certifications {
  /********************
   * 1.Get an up to date list of the officially supported movie certifications on TMDB.
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/certifications/get-movie-certifications
   ********************/
  function GetMovieCertifications(): any;
  /********************
   * 2.Get your account details.
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/account/get-account-details
   ********************/
  function GetTVCertifications(): any;
}
export declare namespace Changes {
  /********************
   * 1.Get a list of all of the movie ids that have been changed in the past 24 hours.
   * You can query it for up to 14 days worth of changed IDs at a time with
   * the "start_date" and "end_date" query parameters. 100 items are returned per page.
   * @param {number|string} start_date (optional)
   * @param {number|string} end_date (optional)
   * @param {number} page (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/changes/get-person-change-list
   ********************/
  function GetMovieChangeList(
    start_date?: string,
    end_date?: string,
    page?: number
  ): any;
  /********************
   * 2.Get a list of all of the TV show ids that have been changed in the past 24 hours.
   * You can query it for up to 14 days worth of changed IDs at a time
   * with the "start_date" and "end_date" query parameters. 100 items are returned per page.
   * @param {number|string} start_date (optional)
   * @param {number|string} end_date (optional)
   * @param {number} page (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/changes/get-person-change-list
   ********************/
  function GetTVChangeList(
    start_date?: string,
    end_date?: string,
    page?: number
  ): any;
  /********************
   * 3.Get a list of all of the person ids that have been changed in the past 24 hours.
   * You can query it for up to 14 days worth of changed IDs at a time
   * with the "start_date" and "end_date" query parameters. 100 items are returned per page.
   * @param {number|string} start_date (optional)
   * @param {number|string} end_date (optional)
   * @param {number} page (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/changes/get-person-change-list
   ********************/
  function GetPersonChangeList(
    start_date?: string,
    end_date?: string,
    page?: number
  ): any;
}
export declare namespace Collections {
  /********************
   * 1.Get collection details by id.
   * @param {number|string} collection_id
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/collections/get-collection-details
   ********************/
  function GetDetails(collection_id: string | number, language?: string): any;
  /********************
   * 2.Get collection details by id.
   * @param {number|string} collection_id
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/collections/get-collection-images
   ********************/
  function GetImages(collection_id: string | number, language?: string): any;
  /********************
   * 3.Get the list translations for a collection by id.
   * @param {number|string} collection_id
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/collections/get-collection-translations
   ********************/
  function GetTranslations(
    collection_id: string | number,
    language?: string
  ): any;
}
export declare namespace Companies {
  /********************
   * 1.Get a companies details by id.
   * @param {number|string} company_id
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/companies/get-company-details
   ********************/
  function GetDetails(company_id: number | string): any;
  /********************
   * 2.Get the alternative names of a company.
   * @param {number|string} company_id
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/companies/get-company-details
   ********************/
  function GetAlternativeNames(company_id: number | string): any;
  /********************
   * 3.Get a companies logos by id.
   * @param {number|string} company_id
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/companies/get-company-details
   ********************/
  function GetImages(company_id: number | string): any;
}
export declare namespace Configuration {
  /********************
   * 1.Get the system wide configuration information.
   * Some elements of the API require some knowledge of this configuration data.
   * The purpose of this is to try and keep the actual API responses as light as possible.
   * It is recommended you cache this data within your application and check for updates every few days.
   * @returns JSON
   * @example To build an image URL, you will need 3 pieces of data. The base_url, size and file_path.
   * Simply combine them all and you will have a fully qualified URL. Here’s an example URL:
   * https://image.tmdb.org/t/p/w500/8uO0gUM8aNqYLs1OsTBQiXu0fEv.jpg
   * @doc https://developers.themoviedb.org/3/changes/get-person-change-list
   ********************/
  function GetAPIConfiguration(): any;
  /********************
   * 2.Get the list of countries (ISO 3166-1 tags) used throughout TMDB.
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/configuration/get-countries
   ********************/
  function GetCountries(): any;
  /********************
   * 3.Get a list of the jobs and departments we use on TMDB.
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/configuration/get-jobs
   ********************/
  function GetJobs(): any;
  /********************
   * 4.Get the list of languages (ISO 639-1 tags) used throughout TMDB.
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/configuration/get-languages
   ********************/
  function GetLanguages(): any;
  /********************
   * 5.Get a list of the officially supported translations on TMDB.
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/configuration/get-primary-translations
   ********************/
  function GetPrimaryTranslations(): any;
  /********************
   * 6.Get the list of timezones used throughout TMDB.
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/configuration/get-timezones
   ********************/
  function GetTimezones(): any;
}
export declare namespace Credits {
  /********************
   * 1.Get a movie or TV credit details by id.
   * @param {number|string} credit_id
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/credits/get-credit-details
   ********************/
  function GetDeatils(credit_id: number | string): any;
}
export declare namespace Discover {
  /********************
   * 1.Discover movies by different types of data like average rating,
   * number of votes, genres and certifications.
   * You can get a valid list of certifications from the "certifications list" method.
   * @param {any} query
   * @example 'query' are more than 32 available properties.... see more in discover.ts
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/discover/movie-discover
   ********************/
  function GetMovieDiscover(query?: any): any;
  /********************
   * 2.Discover TV shows by different types of data like average rating,
   * number of votes, genres, the network they aired on and air dates.
   * @param {any} query
   * @example 'query' are more than 24 available properties.... see more in discover.ts
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/discover/tv-discover
   ********************/
  function GetTVDiscover(query?: any): any;
}
export declare namespace Find {
  /********************
   * 1.The find method makes it easy to search for objects in TMDB database by an external id.
   * @param {number|string} external_id
   * @param {string} external_source (default: imdb_id)
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/find/find-by-id
   ********************/
  function FindByID(
    external_id: number | string,
    language?: string,
    external_source?: string
  ): any;
}
export declare namespace Genres {
  /********************
   * 1.Get the list of official genres for movies.
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/genres/get-movie-list
   ********************/
  function GetMovieList(language?: string): any;
  /********************
   * 2.Get the list of official genres for TV shows.
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/genres/get-tv-list
   ********************/
  function GetTVList(language?: string): any;
}
export declare namespace GuestSessions {
  /********************
   * 1.Get the rated movies for a guest session.
   * @param {number|string} guest_session_id
   * @param {string} language (optional)
   * @param {string} sort_by (optional) "created_at.asc" or "created_at.desc"
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/guest-sessions/get-guest-session-rated-movies
   ********************/
  function GetRatedMovies(
    guest_session_id: string,
    language?: string,
    sort_by?: string
  ): any;
  /********************
   * 2.Get the rated TV shows for a guest session.
   * @param {number|string} guest_session_id
   * @param {string} language (optional)
   * @param {string} sort_by (optional) "created_at.asc" or "created_at.desc"
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/guest-sessions/get-guest-session-rated-tv-shows
   ********************/
  function GetRatedTVShows(
    guest_session_id: string,
    language?: string,
    sort_by?: string
  ): any;
  /********************
   * 3.the rated TV episodes for a guest session.
   * @param {number|string} guest_session_id
   * @param {string} language (optional)
   * @param {string} sort_by (optional) "created_at.asc" or "created_at.desc"
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/guest-sessions/get-guest-session-rated-tv-shows
   ********************/
  function GetRatedTVEpisodes(
    guest_session_id: string,
    language?: string,
    sort_by?: string
  ): any;
}
export declare namespace KeyWords {
  /********************
   * 1.GET /keyword/{keyword_id}
   * @description
   * @param {number|string} keyword_id
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/keywords/get-keyword-details
   ********************/
  function GetDetails(keyword_id: number | string): any;
  /********************
   * 2.GET /keyword/{keyword_id}/movies
   * @description Get the movies that belong to a keyword.
   * We highly recommend using 'movie discover' instead of this method as it is much more flexible.
   * @param {number|string} keyword_id
   * @param {number|string} language(optional)
   * @param {boolean} include_adult(optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/keywords/get-keyword-details
   ********************/
  function GetMovies(
    keyword_id: number | string,
    language?: string,
    include_adult?: boolean
  ): any;
}
export declare namespace Lists {
  /********************
   * 1.Get the details of a list.
   * @param {number|string} list_id
   * @param {number|string} language(optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/lists/get-list-details
   ********************/
  function GetDetails(list_id: number | string, language?: string): any;
  /********************
   * 2.You can use this method to check if a movie has already been added to the list.
   * @param {number|string} list_id
   * @param {number|string} movie_id
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/lists/check-item-status
   ********************/
  function GetCheckItemStatus(
    list_id: number | string,
    movie_id: number | string
  ): any;
  /********************
   * 3.Create a list.
   * @param {any} query
   * @param {number|string} session_id
   * @example query{
   *    "name": "This is my awesome test list.",
   *    "description": "Just an awesome list dawg.",
   *    "language": "en"
   * }
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/lists/create-list
   ********************/
  function PostCreateList(query: any, session_id: number | string): any;
  /********************
   * 4.Add a movie to a list.
   * @param {any} query
   * @param {number|string} list_id
   * @param {number|string} session_id
   * @example query{
   *    "media_id": 18
   * }
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/lists/add-movie
   ********************/
  function PostAddMovie(
    query: any,
    list_id: number | string,
    session_id: number | string
  ): any;
  /********************
   * 5.Remove a movie from a list.
   * @param {any} query
   * @param {number|string} list_id
   * @param {number|string} session_id
   * @example query{
   *    "media_id": 12
   * }
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/lists/remove-movie
   ********************/
  function PostRemoveMovie(
    query: any,
    list_id: number | string,
    session_id: number | string
  ): any;
  /********************
   * 6.Clear all of the items from a list.
   * @param {number|string} list_id
   * @param {number|string} session_id
   * @param {boolean} confirm
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/lists/create-list
   ********************/
  function PostClearList(
    list_id: number | string,
    session_id: number | string,
    confirm: boolean
  ): any;
  /********************
   * 7.Delete  a list.
   * @param {number|string} list_id
   * @param {number|string} session_id
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/lists/delete-list
   ********************/
  function DeleteDeleteList(
    list_id: number | string,
    session_id: number | string
  ): any;
}
export declare namespace Networks {
  /********************
   * 1.Get the details of a network.
   * @param {number|string} network_id
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/networks/get-network-details
   ********************/
  function GetDetails(network_id: string | number): any;
  /********************
   * 2.Get the alternative names of a network.
   * @param {number|string} network_id
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/networks/get-network-alternative-names
   ********************/
  function GetAlternativeNames(network_id: string | number): any;
  /********************
   * 3.Get the TV network logos by id.
   * @param {number|string} network_id
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/networks/get-network-images
   ********************/
  function GetImages(network_id: string | number): any;
}
export declare namespace Trending {
  /********************
   * 1.Get the daily or weekly trending items.
   * The daily trending list tracks items over the period of a day while items have a 24 hour half life.
   * The weekly list tracks items over a 7 day period, with a 7 day half life.
   * @param {string} media_type ("all" || "movie" || "tv" || "person")
   * @param {string} time_window ("day" || "week")
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/trending/get-trending
   ********************/
  function GetTrending(media_type: string, time_window: string): any;
}
export declare namespace People {
  /********************
   * 1.Get the primary person details by id.
   * @param {number|string} person_id
   * @param {string} language
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/people/get-person-details
   ********************/
  function GetDetails(
    person_id: number | string,
    language?: string,
    append_to_response?: string
  ): any;
  /********************
   * 2.Get the changes for a person. By default only the last 24 hours are returned.
   * @param {number|string} person_id
   * @param {string} end_date (optional)
   * @param {number} page (optional)
   * @param {string} start_date (optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/people/get-person-changes
   ********************/
  function GetChanges(
    person_id: number | string,
    start_date?: string,
    end_date?: number | string,
    page?: number
  ): any;
  /********************
   * 3.Get the movie credits for a person.
   * @param {number|string} person_id
   * @param {string} language(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/people/get-person-movie-credits
   ********************/
  function GetMovieCredits(person_id: number | string, language?: string): any;
  /********************
   * 4.Get the TV show credits for a person.
   * @param {number|string} person_id
   * @param {string} language(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/people/get-person-tv-credits
   ********************/
  function GetTVCredits(person_id: number | string, language?: string): any;
  /********************
   * 5.Get the movie and TV credits together in a single response.
   * @param {number|string} person_id
   * @param {string} language(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/people/get-person-combined-credits
   ********************/
  function GetCombinedCredits(
    person_id: number | string,
    language?: string
  ): any;
  /********************
   * 6.Get the external ids for a person. We currently support the following external sources.
   * @param {number|string} person_id
   * @param {string} language(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/people/get-person-external-ids
   ********************/
  function GetExternalIDs(person_id: number | string, language?: string): any;
  /********************
   * 7.Get the images for a person.
   * @param {number|string} person_id
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/people/get-person-images
   ********************/
  function GetImages(person_id: number | string): any;
  /********************
   * 8.Get the primary person details by id.
   * @param {number|string} person_id
   * @param {string} language(optional)
   * @param {number} page(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/people/get-tagged-images
   ********************/
  function GetTaggedImages(
    person_id: number | string,
    language?: string,
    page?: number
  ): any;
  /********************
   * 9.Get a list of translations that have been created for a person.
   * @param {number|string} person_id
   * @param {string} language(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/people/get-person-translations
   ********************/
  function GetTranslations(person_id: number | string, language?: string): any;
  /********************
   * 10.Get the most newly created person. This is a live response and will continuously change.
   * @param {string} language(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/people/get-latest-person
   ********************/
  function GetLatest(language?: string): any;
  /********************
   * 11.Get the primary person details by id.
   * @param {string} language(optional)
   * @param {number} page(optional)
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/people/get-person-details
   ********************/
  function GetPopular(language?: string, page?: number): any;
}
export declare namespace Reviews {
  /********************
   * 1.GET /review/{review_id}
   * @description Retrieve the details of a movie or TV show review.
   * @param {number|string} review_id
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/reviews/get-review-details
   ********************/
  function GetDeatils(review_id: number | string): any;
}
export declare namespace Search {
  /********************
   * 1.Search for companies.
   * @param {string} query keywords
   * @param {number} page (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/search/search-companies
   ********************/
  function GetSearchCompanies(query: string, page?: number): any;
  /********************
   * 2.GET /search/collection
   * @description Search for collections.
   * @param {string} language(optional)
   * @param {string} query keywords
   * @param {number} page (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/search/search-collections
   ********************/
  function GetSearchCollections(
    query: string,
    language?: string,
    page?: number
  ): any;
  /********************
   * 3.Search for keywords.
   * @param {string} query keywords
   * @param {number} page (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/search/search-keywords
   ********************/
  function GetSearchKeywords(query: string, page?: number): any;
  /********************
   * 4.Search for movies.
   * @param {string} language(optional)
   * @param {string} query
   * @param {boolen} include_adult (optional)
   * @param {string} region (optional)
   * @param {number} year (optional)
   * @param {number} primary_release_year (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/search/search-movies
   ********************/
  function GetSearchMovies(
    query: string,
    language?: string,
    page?: number,
    include_adult?: boolean,
    region?: string,
    year?: number,
    primary_release_year?: number
  ): any;
  /********************
   * 5.Search multiple models in a single request.
   * Multi search currently supports searching for movies, tv shows and people in a single request.
   * @param {string} query
   * @param {string} language(optional)
   * @param {number} page (optional)
   * @param {boolen} include_adult (optional)
   * @param {string} region (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/search/multi-search
   ********************/
  function GetMultiSearch(
    query: string,
    language?: string,
    page?: number,
    include_adult?: boolean,
    region?: string
  ): any;
  /********************
   * 6.Search for people.
   * @param {string} language(optional)
   * @param {string} query
   * @param {number} page (optional)
   * @param {boolen} include_adult (optional)
   * @param {string} region (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/search/search-people
   ********************/
  function GetSearchPeople(
    query: string,
    language?: string,
    page?: number,
    include_adult?: boolean,
    region?: string
  ): any;
  /********************
   * 7.Search for a TV show.
   * @param {string} language(optional)
   * @param {number} page (optional)
   * @param {string} query
   * @param {boolen} include_adult (optional)
   * @param {number} first_air_date_year (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/search/search-tv-shows
   ********************/
  function GetSearchTVShows(
    query: string,
    language?: string,
    page?: number,
    include_adult?: boolean,
    first_air_date_year?: number
  ): any;
}
export declare namespace TVseasons {
  /********************
   * 1.Get the TV season details by id.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {string} language (optional)
   * @param {string} append_to_response (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-seasons/get-tv-season-details
   ********************/
  function GetDetails(
    tv_id: number | string,
    season_number: number | string,
    language?: string,
    append_to_response?: string
  ): any;
  /********************
   * 2.Returns all of the user ratings for the season's episodes.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {string} session_id (optional)
   * @param {string} guest_session_id (optional)
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-seasons/get-tv-season-details
   ********************/
  function GetAccountStates(
    tv_id: number | string,
    season_number: number | string,
    session_id: string,
    guest_session_id?: string,
    language?: string
  ): any;
  /********************
   * 3.Get the aggregate credits for TV season.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-seasons/get-tv-season-aggregate-credits
   ********************/
  function GetAggregateCredits(
    tv_id: number | string,
    season_number: number | string,
    language?: string
  ): any;
  /********************
   * 4.GET /tv/{tv_id}/season/{season_id}/changes
   * @description Get the changes for a TV season. By default only the last 24 hours are returned.
   * @param {number|string} season_id
   * @param {string} start_date (optional)
   * @param {string} end_date (optional)
   * @param {number} page (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-seasons/get-tv-season-changes
   ********************/
  function GetChanges(
    season_id: number | string,
    start_date?: string,
    end_date?: string,
    page?: number
  ): any;
  /********************
   * 5.Get the credits for TV season.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-seasons/get-tv-season-credits
   ********************/
  function GetCredits(
    tv_id: number | string,
    season_number: number | string,
    language?: string
  ): any;
  /********************
   * 6.Get the TV season details by id.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-seasons/get-tv-season-details
   ********************/
  function GetExternalIDs(
    tv_id: number | string,
    season_number: number | string,
    language?: string
  ): any;
  /********************
   * 7.Get the images that belong to a TV season.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-seasons/get-tv-season-images
   ********************/
  function GetImages(
    tv_id: number | string,
    season_number: number | string,
    language?: string
  ): any;
  /********************
   * 8.Get the credits for TV season.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-seasons/get-tv-season-translations
   ********************/
  function GetTranslations(
    tv_id: number | string,
    season_number: number | string,
    language?: string
  ): any;
  /********************
   * 9.Get the videos that have been added to a TV season.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-seasons/get-tv-season-videos
   ********************/
  function GetVideos(
    tv_id: number | string,
    season_number: number | string,
    language?: string
  ): any;
}
export declare namespace TVEpisodes {
  /********************
   * 1.Get the TV season details by id.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {number|string} episode_number
   * @param {string} language (optional)
   * @param {string} append_to_response (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-episodes/get-tv-episode-details
   ********************/
  function GetDetails(
    tv_id: number | string,
    season_number: number | string,
    episode_number: number | string,
    language?: string,
    append_to_response?: string
  ): any;
  /********************
   * 2.Get your rating for a episode.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {number|string} episode_number
   * @param {string} guest_session_id (optional)
   * @param {string} session_id (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-episodes/get-tv-episode-account-states
   ********************/
  function GetAccountStates(
    tv_id: number | string,
    season_number: number | string,
    episode_number: number | string,
    session_id?: string,
    guest_session_id?: string
  ): any;
  /********************
   * 3.Get the changes for a TV season. By default only the last 24 hours are returned.
   * @param {number|string} episode_id
   * @param {string} start_date (optional)
   * @param {string} end_date (optional)
   * @param {number} page (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-episodes/get-tv-episode-changes
   ********************/
  function GetChanges(
    episode_id: number | string,
    start_date?: string,
    end_date?: string,
    page?: number
  ): any;
  /********************
   * 4.GET /tv/{tv_id}/season/{season_number}/episode/{episode_number}/credits
   * @description Get the credits (cast, crew and guest stars) for a TV episode.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {number|string} episode_number
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-episodes/get-tv-episode-credits
   ********************/
  function GetCredits(
    tv_id: number | string,
    season_number: number | string,
    episode_number: number | string,
    language?: string
  ): any;
  /********************
   * 5.GET /tv/{tv_id}/season/{season_number}/episode/{episode_number}/external_ids
   * @description Get the TV season details by id.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {number|string} episode_number
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-episodes/get-tv-episode-external-ids
   ********************/
  function GetExternalIDs(
    tv_id: number | string,
    season_number: number | string,
    episode_number: number | string
  ): any;
  /********************
   * 6.GET /tv/{tv_id}/season/{season_number}/episode/{episode_number}/images
   * @description Get the images that belong to a TV episode.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {number|string} episode_number
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-episodes/get-tv-episode-images
   ********************/
  function GetImages(
    tv_id: number | string,
    season_number: number | string,
    episode_number: number | string
  ): any;
  /********************
   * 7.GET /tv/{tv_id}/season/{season_number}/episode/{episode_number}/translations
   * @description Get the translation data for an episode.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {number|string} episode_number
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-episodes/get-tv-episode-translations
   ********************/
  function GetTranslations(
    tv_id: number | string,
    season_number: number | string,
    episode_number: number | string
  ): any;
  /********************
   * 8.Rate a TV episode.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {number|string} episode_number
   * @param {any} query
   * @param {string} session_id (optional)
   * @param {string} guest_session_id (optional)
   * @returns JSON
   * @example query{
   *    "value": 8.5
   * }
   * @doc https://developers.themoviedb.org/3/tv-episodes/rate-tv-episode
   ********************/
  function PostRateTVEpisode(
    tv_id: number | string,
    season_number: number | string,
    episode_number: number | string,
    query: any,
    session_id?: string,
    guest_session_id?: string
  ): any;
  /********************
   * 9.Remove your rating for a TV episode.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {number|string} episode_number
   * @param {string} session_id (optional)
   * @param {string} guest_session_id (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-episodes/delete-tv-episode-rating
   ********************/
  function DeleteDeleteRating(
    tv_id: number | string,
    season_number: number | string,
    episode_number: number | string,
    session_id?: string,
    guest_session_id?: string
  ): any;
  /********************
   * 10.Get the videos that have been added to a TV episode.
   * @param {number|string} tv_id
   * @param {number|string} season_number
   * @param {number|string} episode_number
   * @param {string} language (optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/tv-episodes/get-tv-episode-videos
   ********************/
  function GetVideos(
    tv_id: number | string,
    season_number: number | string,
    episode_number: number | string,
    language?: string
  ): any;
}
export declare namespace TVepisodesgroups {
  /********************
   * 1.Get the details of a TV episode group. Groups support 7 different types which are enumerated as the following:
   * 1.Original air date
   * 2.Absolute
   * 3.DVD
   * 4.Digital
   * 5.Story arc
   * 6.Production
   * 7.TV
   * @param {number|string} id
   * @returns {any} JSON
   * @doc https://developers.themoviedb.org/3/tv-episode-groups/get-tv-episode-group-details
   ********************/
  function GetDeatils(id: number | string, language?: string): any;
}
export declare namespace Watchproviders {
  /********************
   * 1.Returns a list of all of the countries we have watch provider (OTT/streaming) data for.
   * @param {string} language(optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/watch-providers/get-available-regions
   ********************/
  function GetAvailableRegions(language?: string): any;
  /********************
   * 2.Returns a list of the watch provider (OTT/streaming) data we have available for movies.
   * You can specify a watch_region param if you want to further filter the list by country.
   * @param {string} language(optional)
   * @param {string} watch_region(optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/watch-providers/get-movie-providers
   ********************/
  function GetMovieProviders(language?: string, watch_region?: string): any;
  /********************
   * 3.Returns a list of the watch provider (OTT/streaming) data we have available for TV series.
   * You can specify a watch_region param if you want to further filter the list by country.
   * @param {string} language(optional)
   * @param {string} watch_region(optional)
   * @returns JSON
   * @doc https://developers.themoviedb.org/3/watch-providers/get-tv-providers
   ********************/
  function GetTVProviders(language?: string, watch_region?: string): any;
}
